function ObjFcn = hyperparameterstuning(imdsTrain,imdsValidation, imdsTest)
    ObjFcn = @Min_MSE;
    function [Min_MSE,cons,fileName] = Min_MSE(optVars)
    MainBranch1_initial_layer = optVars.MainBranch1_initial_layer;
    MainBranch2_initial_layer = optVars.MainBranch2_initial_layer;
    MainBranch1_second_layer = optVars.MainBranch1_second_layer;
    MainBranch2_second_layer = optVars.MainBranch2_second_layer;
    MainBranch1_third_layer = optVars.MainBranch1_third_layer;
    MainBranch2_third_layer = optVars.MainBranch2_third_layer;
    MainBranch1_fourth_layer = optVars.MainBranch1_fourth_layer;
    MainBranch2_fourth_layer = optVars.MainBranch2_fourth_layer;
    % MaxIterations = optVars.MaxIterations;
    InitialLearningRate = optVars.InitialLearningRate;
    Dropout = optVars.Dropout;
    Input_Size = 3;
    % Options for LBFGS
    % options = trainingOptions("lbfgs", ...
    % MaxIterations = MaxIterations, ...
    % ExecutionEnvironment = "auto", ...
    % Plots = "training-progress", ...
    % ValidationData= imdsValidation, ...
    % Metrics = "rmse", ...
    % Verbose = false);
    % options for Adam or SGD
    options = trainingOptions("adam", ...
    InitialLearnRate= InitialLearningRate, ...
    LearnRateSchedule="piecewise", ...
    LearnRateDropFactor=0.2, ...
    LearnRateDropPeriod=5, ...
    MaxEpochs=1, ...
    MiniBatchSize=64, ...
    ValidationData= imdsValidation, ...
    ValidationFrequency= 5, ...
    SequenceLength="shortest", ...
    Metrics="rmse");
    net = CreateLayers(Input_Size, ...
        MainBranch1_initial_layer, ...
        MainBranch2_initial_layer, ...
        MainBranch1_second_layer, ...
        MainBranch2_second_layer, ...
        MainBranch1_third_layer, ...
        MainBranch2_third_layer, ...
        MainBranch1_fourth_layer,...
        MainBranch2_fourth_layer,...
        Dropout);
    trainedNet = trainnet(imdsTrain,net,'mse',options);
    close(findall(groot,'Tag','NNET_CNN_TRAININGPLOT_UIFIGURE'));
    ypred = predict(trainedNet,imdsTest{1});
    Differences = ypred - imdsTest{2};
    squaredDifferences = (Differences).^2;
    Min_MSE = mean(squaredDifferences)*100;
    fileName = "MSE" + num2str(Min_MSE) + ".mat";
    save(fileName,'trainedNet','Min_MSE', "options")
    cons = [];
    end
end
